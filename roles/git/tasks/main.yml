---
###############################################################################
#   GIT
###############################################################################

# install packages
- name: default apps
  apt: pkg={{item}} state=present
  with_items:
    - git

# setup user, ssh_keys
- name: create git user
  user: shell=/bin/bash name={{ user }} password={{ password }} home={{ homedir }}
#  explore later
#  user: shell=//usr/bin/git-shell name=git password={{ git_user_passwd }}

- name: remove .ssh folder
  command: rm -rf ~/.ssh
  sudo_user: ${user}
  tags: ssh_keys

- name: create .ssh folder
  command: mkdir -p ~/.ssh creates=true
  sudo_user: ${user}
  tags: ssh_keys

- name: add ssh private key
  copy: src={{ ssh_keys_dir }}/{{ user }}/id_rsa dest=~/.ssh/id_rsa mode=700
  sudo_user: ${user}
  tags: ssh_keys

- name: add ssh public key
  copy: src={{ ssh_keys_dir }}/{{ user }}/id_rsa.pub dest=~/.ssh/id_rsa.pub
  sudo_user: ${user}
  tags: ssh_keys

# allow other users to access via SSH
- name: setup authorized_keys for the git user
  authorized_key: user=git
                  key="{{ lookup('file',item) }}"
  with_fileglob:
#    - "{{ playbook_dir }}/{{ inventory_hostname }}/*.pub"
    - /home/joao/devel/github/joaocenoura/orzaphur/ssh_keys/*/id_rsa.pub
  tags: ssh_keys

- name: create backup repository (if it doesn't exist)
  shell: mkdir -p {{ homedir }}/backup.git ; git init --bare {{ homedir }}/backup.git creates={{ homedir }}/backup.git
  sudo_user: ${user}
# get some web interface